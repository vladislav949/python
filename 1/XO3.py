# Операторы-------------------------------------------------------
# Они отвечают за изменение поведения программы в зависимости от входных параметров, определённых в проверке.
# Проще говоря: если будет число 1, то программа запустит скрипт one, а если число 2 – скрипт two.
# Внутри условных операторов могут быть другие такие же условия для уточнения полученных данных.
# В рамках одного оператора можно сразу проверить пару условий.
# Для того, чтобы проверить несколько условий нужно их разделить элементом and (логическое и).

if 5 == 5: # если 5 будет равно 5, у нас выполниться код после (:) и который отделен одинаковым кол-вом
# отступов, т.е print("yes") и print("!!!")
    print("yes")
    print("!!!")

user_data = int(input("Ввести число")) # переменная
if user_data > 5: # Если переменная больше числа 5 выводится надпись (Number is bigger than 5)
    print("Number is bigger than 5")

user_data2 = int(input("Введите число")) # переменная №2
if user_data2 != 5: #
    print("Число не равно 5")
    if user_data2 > 5:
        print("Число больше 5")
    if user_data2 < 5:
        print("Число меньше 5")


print("---------------------------------")
# Сокращения (Bool переменные) --------------------------------------
per3 = True
if per3: # Тоже самое, что и if per3 == True: просто сокращено
    print("User is happy")
if not per3: # Тоже самое, что и if per3 == False:
    print("User is not happy")
#--------------------------------------------------------------------

print("---------------------------------")
# Если есть оператор if можно воспользоваться оператором else, который применяется в самом конце.
# else работает в том случае если код в операторе if не сработал
per4 = False
if per4:
    print("User is happy")
else:
    print("User is unhappy")

print("---------------------------------")
# Есть промежуточный оператор между if и else ---- elif (elseif) --------------------------------
# (elif) оператор который позволяет прописать некое дополнительное условие, если условие верно, выполняется elif
# если не верно будет выполняться else.
user_data3 = int(input("Число"))
per4 = False
if per4:
    print("User is happy")
elif user_data3 == 5:
    print("Number is 5")
elif user_data3 == 7:
    print("Number is 7")
else:
    print("User is unhappy")


print("---------------------------------------------------")

per5 = True
user_data4 = int(input("Какое-либо число"))

# Проверка нескольких условий сразу 1. -------------------------------
if per5 and user_data4 == 6: # одно условие and другое условие.
    print("User is happy")
elif user_data4 == 5:
    print("Number is 5")
elif user_data4 == 7:
    print("Number is 7")
else:
    print("User is unhappy")

print("---------------------------------------------------")
# Проверка нескольких условий сразу 2. -------------------------------
# Оператор or.
# Если хотя-бы одно из условий будет верным, то и условие в целом будет верным.
per6 = False
user_data5 = int(input("Еще одно число"))

if per6 or user_data5 == 6: # одно условие or другое условие.
    print("User is happy")
elif user_data5 == 5:
    print("Number is 5")
elif user_data5 == 7:
    print("Number is 7")
else:
    print("User is unhappy")
    # Условий может быть несколько подряд (1 or 2 or 3 or 4)



# Тернарный оператор -------------------------------------------------
print("Как выглядит без тернарного оператора оператора --------------------------------------")
data = input()

# (if) Если от пользователя получаем строку "Five", то в переменную number устанавливаем значение 5, иначе (else) в
# переменную number устанавлиывается значение 0

if data == "Five":
    number = 5
else:
    number = 0

print(number) # Вывод этой переменной на экран (переменная вводится без "", иначе будет выведен просто текст)

print("Тернарный оператор-----------------------------------------------")

# Теперь это же с использованием тернарного оператора ----------------------
data = input()
number = 5 if data == "Five" else 0
print(number)
# Устанавливаем значение 5, только в том случае, если data = "Five", иначе устанавливаем 0.